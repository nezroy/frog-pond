# this sample conf setup for a custom nginx 1.11.5 windows build that supports http2
# should work with a general OOB/pkged unix nginx build just fine

worker_processes  1;
error_log   logs/error.log;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 15m;

    tcp_nopush on;
    tcp_nodelay off;

    gzip on;
    gzip_comp_level 9;
    gzip_proxied any;
    gzip_types text/plain text/css application/javascript text/xml application/xml application/xml+rss application/x-javascript text/javascript application/json;

    server {
        # reverse proxy for node app.js
        listen 192.168.1.50:443 http2 ssl;
        server_name  frog-pond.xyjax.dev;
        ssl_certificate "D:/projects/keys/xyjax.dev.crt";
        ssl_certificate_key "D:/projects/keys/xyjax.dev.key";
        access_log   logs/xyjax-pond-access.log combined;
        error_log    logs/xyjax-pond-error.log;
        root         D:/projects/frog-pond/public;
        index        index.html;
  
        location / {
            try_files $uri @nodejs;
        }
  
        location @nodejs {
            proxy_pass http://127.0.0.1:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    server {
        # static file hosting; in prod "cf.xyjax.com" resolves to a cloudfront dist
        listen 192.168.1.50:443 http2 ssl;
        server_name  static.xyjax.dev cf.xyjax.dev;
        ssl_certificate "D:/projects/keys/xyjax.dev.crt";
        ssl_certificate_key "D:/projects/keys/xyjax.dev.key";
        access_log   logs/static-xyjax-access.log combined;
        error_log    logs/static-xyjax-error.log;
        root         D:/projects/frog-pond/static;
        index        index.html;

        location / {
            gzip off;
            gzip_static on;
            add_header Cache-Control 'max-age=604800, public';
            add_header Last-Modified '';
        }

        location /fonts/ {
            gzip off;
            gzip_static on;
            add_header Cache-Control 'max-age=604800, public';
            add_header Last-Modified '';
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS';
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 604800;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
    }
}
